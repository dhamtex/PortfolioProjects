-- Exploring Data Analysis

SELECT *
FROM layoffs_staging2;

SELECT MAX(total_laid_off), MAX(percentage_laid_off)
FROM layoffs_staging;

-- for percentage_laid_off; 1 represent 100, that means 100 of the company were laid off.

SELECT *
FROM layoffs_staging
WHERE percentage_laid_off =1
ORDER BY funds_raised_millions DESC;

SELECT company, SUM(total_laid_off)
FROM layoffs_staging
GROUP BY company
ORDER BY 2 DESC;

SELECT MIN(date), MAX(date)
FROM layoffs_staging2;

SELECT industry, SUM(total_laid_off)
FROM layoffs_staging
GROUP BY industry
ORDER BY 2 DESC;

SELECT country, SUM(total_laid_off)
FROM layoffs_staging
GROUP BY country
ORDER BY 1 DESC;

SELECT date, SUM(total_laid_off)
FROM layoffs_staging
GROUP BY date
ORDER BY 2 DESC;

SELECT YEAR(date), SUM(total_laid_off)
FROM layoffs_staging2
GROUP BY YEAR(date)
ORDER BY 1 DESC;

SELECT stage, SUM(total_laid_off)
FROM layoffs_staging
GROUP BY stage
ORDER BY 2 DESC;

SELECT company, AVG(percentage_laid_off)
FROM layoffs_staging
GROUP BY company
ORDER BY 2 DESC;

-- Rolling total layoffs
-- 2022-07-25. we want to do the sixth position;

SELECT SUBSTRING(date, 6,2) AS Month, SUM(total_laid_off)
FROM layoffs_staging2
GROUP BY SUBSTRING(date, 6,2);

SELECT SUBSTRING(date, 6,2) AS Month, SUM(total_laid_off)
FROM layoffs_staging2
GROUP BY SUBSTRING(date, 6,2);

SELECT SUBSTRING(date, 1,7) AS Month, SUM(total_laid_off)
FROM layoffs_staging2
GROUP BY MONTH
ORDER BY 1 ASC;

WITH Rolling_Total AS
(
SELECT SUBSTRING(date, 1,7) AS Month, SUM(total_laid_off) AS total_off
FROM layoffs_staging2
GROUP BY MONTH
ORDER BY 1 ASC
)
SELECT Month, SUM(total_off) OVER(ORDER BY Month) AS rolling_total
FROM Rolling_Total;

WITH Rolling_Total AS
(
SELECT SUBSTRING(date, 1,7) AS Month, SUM(total_laid_off) AS total_off
FROM layoffs_staging2
GROUP BY MONTH
ORDER BY 1 ASC
)
SELECT Month, total_off,
SUM(total_off) OVER(ORDER BY Month) AS rolling_total
FROM Rolling_Total; 


SELECT company, SUM(total_laid_off)
FROM layoffs_staging2
GROUP BY company
ORDER BY 2 DESC;

SELECT company, YEAR(date), SUM(total_laid_off)
FROM layoffs_staging2
GROUP BY company, YEAR(date)
ORDER BY company ASC;

SELECT company, YEAR(date), SUM(total_laid_off)
FROM layoffs_staging2
GROUP BY company, YEAR(date)
ORDER BY 3 DESC;

WITH Company_Year(company, years, total_laid_off) AS
(
SELECT company, YEAR(date), SUM(total_laid_off)
FROM layoffs_staging2
GROUP BY company, YEAR(date)
)
SELECT *
FROM Company_Year;


WITH Company_Year(company, years, total_laid_off) AS
(
SELECT company, YEAR(date), SUM(total_laid_off)
FROM layoffs_staging2
GROUP BY company, YEAR(date)
)
SELECT *, DENSE_RANK() OVER (PARTITION BY years ORDER BY total_laid_off DESC) AS Ranking
FROM Company_Year
WHERE years IS NOT NULL
ORDER BY Ranking ASC;


WITH Company_Year(company, years, total_laid_off) AS
(
SELECT company, YEAR(date), SUM(total_laid_off)
FROM layoffs_staging2
GROUP BY company, YEAR(date)
), Company_Year_Rank AS
(SELECT *,
DENSE_RANK() OVER (PARTITION BY years ORDER BY total_laid_off DESC) AS Ranking
FROM Company_Year
WHERE years IS NOT NULL
)
SELECT *
FROM Company_Year_Rank
WHERE Ranking <= 5;


 
